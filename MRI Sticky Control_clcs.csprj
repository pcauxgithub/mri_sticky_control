<codestructure version="5.13">
<phptree>
<treenode node="mri_sticky_control.functions;PHP:PHP Include;D:\xampp\htdocs\webform\sites\all\modules\mri_sticky_control\mri_sticky_control.module;f9;9;37;9;;;;vpos;;v;;r&#10;Description&#10;     &#10;&#10;Parameters:&#10;    undefined $path&#10;    undefined $arg;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="Mri_sticky_controlTestCase;PHP:Class Name;D:\xampp\htdocs\webform\sites\all\modules\mri_sticky_control\mri_sticky_control.test;f0;6;1;8;;;;vpos;;vDrupalWebTestCase;;c;;r&#10;Definition&#10;    class Mri_sticky_controlTestCase extends DrupalWebTestCase&#10;&#10;Description&#10;      file Tests file for the mri_sticky_control module.;;d59,6;;b0,0;;m">
</treenode>
<treenode node="_observed_content_type_will_be_del;PHP:Function Name;D:\xampp\htdocs\webform\sites\all\modules\mri_sticky_control\mri_sticky_control.module;f0;80;1;134;;;;vpos;;v;;r&#10;Definition&#10;    _observed_content_type_will_be_del($form, &amp;$form_state)&#10;&#10;Description&#10;     Implements a callback Function that will be triggerd from the node delete_confirm_alter Hook (Node edit Mask)&#10;&#10;Parameters:&#10;    undefined $form&#10;    undefined $form_state;;d65,80;;b0,0;;mundefined $form;;pundefined $form_state;;p">
</treenode>
<treenode node="_observed_content_type_will_be_saved;PHP:Function Name;D:\xampp\htdocs\webform\sites\all\modules\mri_sticky_control\mri_sticky_control.module;f0;178;1;204;;;;vpos;;v;;r&#10;Definition&#10;    _observed_content_type_will_be_saved($form, &amp;$form_state)&#10;&#10;Description&#10;     Imoplements callback Function for _form_alter hook The _form_alter registrated a try to save a node of observed content type and calls this callback funtion.&#10;&#10;Parameters:&#10;    undefined $form&#10;    undefined $form_state;;d67,178;;b0,0;;mundefined $form;;pundefined $form_state;;p">
</treenode>
<treenode node="mri_sticky_control_config_form_submit;PHP:Function Name;D:\xampp\htdocs\webform\sites\all\modules\mri_sticky_control\mri_sticky_control.module;f0;279;1;294;;;;vpos;;v;;r&#10;Definition&#10;    mri_sticky_control_config_form_submit($form, $form_state)&#10;&#10;Description&#10;     Submit Function handles actions if the config form was submitted&#10;&#10;Parameters:&#10;    undefined $form&#10;    undefined $form_state;;d67,279;;b0,0;;mundefined $form;;pundefined $form_state;;p">
</treenode>
<treenode node="mri_sticky_control_config_form_validate;PHP:Function Name;D:\xampp\htdocs\webform\sites\all\modules\mri_sticky_control\mri_sticky_control.functions;f0;69;1;71;;;;vpos;;v;;r;;d51,527;;b0,0;;m">
</treenode>
<treenode node="mri_sticky_control_cron;PHP:Function Name;D:\xampp\htdocs\webform\sites\all\modules\mri_sticky_control\mri_sticky_control.module;f0;13;1;18;;;;vpos;;v;;r&#10;Definition&#10;    mri_sticky_control_cron()&#10;&#10;Description&#10;     Implements hook_cron().;;d35,13;;b0,0;;m">
</treenode>
<treenode node="mri_sticky_control_form_alter;PHP:Function Name;D:\xampp\htdocs\webform\sites\all\modules\mri_sticky_control\mri_sticky_control.module;f0;163;1;168;;;;vpos;;v;;r&#10;Definition&#10;    mri_sticky_control_form_alter(&amp;$form, $form_state, $form_id)&#10;&#10;Description&#10;     Alter Form, to set an Callback if a Node of observed Content Type is saved&#10;&#10;Parameters:&#10;    undefined $form&#10;    undefined $form_state&#10;    undefined $form_id;;d70,163;;b0,0;;mundefined $form;;pundefined $form_state;;pundefined $form_id;;p">
</treenode>
<treenode node="mri_sticky_control_form_conf;PHP:Function Name;D:\xampp\htdocs\webform\sites\all\modules\mri_sticky_control\mri_sticky_control.module;f0;212;1;267;;;;vpos;;v;;r&#10;Definition&#10;    mri_sticky_control_form_conf($form, &amp; $form_state)&#10;&#10;Description&#10;     Implements the config form of the Module.&#10;&#10;Parameters:&#10;    undefined $form&#10;    undefined $form_state;;d60,212;;b0,0;;mundefined $form;;pundefined $form_state;;p">
</treenode>
<treenode node="mri_sticky_control_form_node_delete_confirm_alter;PHP:Function Name;D:\xampp\htdocs\webform\sites\all\modules\mri_sticky_control\mri_sticky_control.module;f0;67;1;72;;;;vpos;;v;;r&#10;Definition&#10;    mri_sticky_control_form_node_delete_confirm_alter(&amp;$form, &amp;$form_state, $form_id)&#10;&#10;Description&#10;     //if the deleted node is the observed contenttype, then set a callback.&#10;&#10;Parameters:&#10;    undefined $form&#10;    undefined $form_state&#10;    undefined $form_id;;d91,67;;b0,0;;mundefined $form;;pundefined $form_state;;pundefined $form_id;;p">
</treenode>
<treenode node="mri_sticky_control_get_config_query;PHP:Function Name;D:\xampp\htdocs\webform\sites\all\modules\mri_sticky_control\mri_sticky_control.functions;f0;8;1;15;;;;vpos;;v;;r&#10;Definition&#10;    mri_sticky_control_get_config_query()&#10;&#10;Description&#10;     Get the Config Data returns the query to get the config data in table mri_sticky_conf;;d47,468;;b0,0;;m">
</treenode>
<treenode node="mri_sticky_control_get_observed_contenttypes;PHP:Function Name;D:\xampp\htdocs\webform\sites\all\modules\mri_sticky_control\mri_sticky_control.functions;f0;16;1;30;;;;vpos;;v;;r;;d56,476;;b0,0;;m">
</treenode>
<treenode node="mri_sticky_control_help;PHP:Function Name;D:\xampp\htdocs\webform\sites\all\modules\mri_sticky_control\mri_sticky_control.module;f0;20;1;22;;;;vpos;;v;;r;;d46,20;;b0,0;;mpath;;parg;;p">
</treenode>
<treenode node="mri_sticky_control_install;PHP:Function Name;D:\xampp\htdocs\webform\sites\all\modules\mri_sticky_control\mri_sticky_control.install;f0;2;1;4;;;;vpos;;v;;r;;d37,2;;b0,0;;m">
</treenode>
<treenode node="mri_sticky_control_load_config_data;PHP:Function Name;D:\xampp\htdocs\webform\sites\all\modules\mri_sticky_control\mri_sticky_control.module;f0;303;1;330;;;;vpos;;v;;r&#10;Definition&#10;    mri_sticky_control_load_config_data()&#10;&#10;Description&#10;     Load Config Data from DB. At first load, default Datas will be used.;;d47,303;;b0,0;;m">
</treenode>
<treenode node="mri_sticky_control_menu;PHP:Function Name;D:\xampp\htdocs\webform\sites\all\modules\mri_sticky_control\mri_sticky_control.module;f0;47;1;58;;;;vpos;;v;;r&#10;Definition&#10;    mri_sticky_control_menu()&#10;&#10;Description&#10;     Implements Menu Entrys, and defines the path/url of the config mask.;;d35,47;;b0,0;;m">
</treenode>
<treenode node="mri_sticky_control_permission;PHP:Function Name;D:\xampp\htdocs\webform\sites\all\modules\mri_sticky_control\mri_sticky_control.module;f0;30;1;41;;;;vpos;;v;;r&#10;Definition&#10;    mri_sticky_control_permission()&#10;&#10;Description&#10;     Implements hook _permission Set the permission entries in Backend, and make the permissions available;;d41,30;;b0,0;;m">
</treenode>
<treenode node="mri_sticky_control_schema;PHP:Function Name;D:\xampp\htdocs\webform\sites\all\modules\mri_sticky_control\mri_sticky_control.install;f0;15;1;87;;;;vpos;;v;;r&#10;Definition&#10;    mri_sticky_control_schema()&#10;&#10;Description&#10;     Implements hook Schema;;d36,15;;b0,0;;m">
</treenode>
<treenode node="mri_sticky_control_set_other_nodes_unsticky;PHP:Function Name;D:\xampp\htdocs\webform\sites\all\modules\mri_sticky_control\mri_sticky_control.module;f0;136;1;154;;;;vpos;;v;;r;;d74,136;;b0,0;;mnidOfNewStickyNode;;p">
</treenode>
<treenode node="mri_sticky_control_uninstall;PHP:Function Name;D:\xampp\htdocs\webform\sites\all\modules\mri_sticky_control\mri_sticky_control.install;f0;6;1;8;;;;vpos;;v;;r;;d39,6;;b0,0;;m">
</treenode>
<treenode node="mri_sticky_control_write_conf_data;PHP:Function Name;D:\xampp\htdocs\webform\sites\all\modules\mri_sticky_control\mri_sticky_control.functions;f0;38;1;67;;;;vpos;;v;;r&#10;Definition&#10;    mri_sticky_control_write_conf_data($form_state)&#10;&#10;Description&#10;     Write Config Data into DB&#10;&#10;Parameters:&#10;    undefined $form_state;;d57,498;;b0,0;;mundefined $form_state;;p">
</treenode>
</phptree>
</codestructure>